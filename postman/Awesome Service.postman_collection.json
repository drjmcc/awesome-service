{
	"info": {
		"_postman_id": "9da140b2-0c96-4302-9605-626d2a1a9d64",
		"name": "AwesomeApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{currentAccessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiDomain}}/test",
					"host": [
						"{{apiDomain}}"
					],
					"path": [
						"test"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const tokenUrl = `${pm.environment.get('cognitoDomain')}/oauth2/token`",
					"",
					"const echoPostRequest = {",
					"  url: tokenUrl,",
					"  method: 'POST',",
					"  header: 'Content-Type:application/x-www-form-urlencoded',",
					"  body: {",
					"       mode: 'urlencoded',",
					"          urlencoded: [",
					"            {key: \"grant_type\", value: \"client_credentials\", disabled: false},",
					"            {key: \"client_id\", value: pm.environment.get(\"apiClientId\"), disabled: false},",
					"            {key: \"client_secret\", value: pm.environment.get(\"apiClientSecret\"), disabled: false}",
					"        ]",
					"  }",
					"};",
					"",
					"console.log(echoPostRequest);",
					"var getToken = true;",
					"",
					"if (!pm.environment.get('accessTokenExpiry') || ",
					"    !pm.environment.get('currentAccessToken')) {",
					"    console.log('Token or expiry date are missing')",
					"} else if (pm.environment.get('accessTokenExpiry') <= (new Date()).getTime()) {",
					"    console.log('Token is expired')",
					"} else {",
					"    getToken = false;",
					"    console.log('Token and expiry date are all good');",
					"}",
					"",
					"if (getToken === true) {",
					"    pm.sendRequest(echoPostRequest, function (err, res) {",
					"    console.log(err ? err : res.json());",
					"        if (err === null) {",
					"            console.log('Saving the token and expiry date')",
					"            var responseJson = res.json();",
					"            console.log(responseJson);",
					"            pm.environment.set('currentAccessToken', responseJson.access_token)",
					"    ",
					"            var expiryDate = new Date();",
					"            expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);",
					"            pm.environment.set('accessTokenExpiry', expiryDate.getTime());",
					"        }",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}